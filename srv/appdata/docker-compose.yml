services:

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    hostname: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - VERSION=latest
      - PLEX_CLAIM= #optional
    volumes:
      - ${CONFIG}/plex:/config
      - ${DATA}:/data
    devices:
      - /dev/dri:/dev/dri
    restart: unless-stopped

  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    hostname: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE #optional
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - ALLOWEDIPS=0.0.0.0/0 #optional
      - LOG_CONFS=true #optional
    volumes:
      - ${CONFIG}/wireguard:/config
      - /lib/modules:/lib/modules #optional
    ports:
      - 51820:51820/udp
      - 47301:47301
      - 9091:9091			# Transmission
      - 8080:8080			# Qbittorrent
      - 9117:9117			# Jackett
      - 3002:3000			# Firefox
      - 3001:3001			# Firefox
    dns:
      - 1.1.1.1
      - 8.8.8.8
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=0
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    hostname: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG}/sonarr/data:/config
      - ${DATA}:/data
    ports:
      - 8989:8989
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    hostname: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG}/radarr/data:/config
      - ${DATA}:/data
    ports:
      - 7878:7878
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: service:wireguard
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
      - TORRENTING_PORT=47301
    volumes:
      - ${CONFIG}/qbittorrent/appdata:/config
      - ${DATA}:/data
    restart: unless-stopped
    depends_on:
      - wireguard

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    hostname: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG}/bazarr/config:/config
      - ${DATA}:/data
    ports:
      - 6767:6767
    restart: unless-stopped

  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    network_mode: service:wireguard
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - AUTO_UPDATE=true #optional
      - RUN_OPTS= #optional
    volumes:
      - ${CONFIG}/jackett/data:/config
    restart: unless-stopped
    depends_on:
      - wireguard

  firefox:
    image: lscr.io/linuxserver/firefox:latest
    container_name: firefox
    network_mode: service:wireguard
    security_opt:
      - seccomp:unconfined #optional
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG}/firefox:/config
      - ${DATA}/downloads/complete:/config/Downloads
    shm_size: "1gb"
    restart: unless-stopped
    depends_on:
      - wireguard

#  pihole:
#    container_name: pihole
#    image: pihole/pihole:latest
#    ports:
#      - "53:53/tcp"
#      - "53:53/udp"
#      - "80:80/tcp"
#      - "443:443/tcp"
#    environment:
#      TZ: '${TZ}'
#      FTLCONF_webserver_api_password: 'correct horse battery staple'
#      FTLCONF_dns_listeningMode: 'all'
#    volumes:
#      - '${CONFIG}/pihole:/etc/pihole'
#    cap_add:
#      - SYS_NICE
#    restart: unless-stopped

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    hostname: overseerr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG}/overseerr/config:/config
    ports:
      - 5055:5055
    restart: unless-stopped

  ddns:
    image: ghcr.io/jjgroenendijk/ddns-updater-mijnhost:latest
    container_name: ddns
    hostname: ddns
    restart: unless-stopped
    environment:
      - MIJNHOST_API_KEY=${MIJNHOST_API_KEY}
    volumes:
      - ${CONFIG}/ddns:/app/config